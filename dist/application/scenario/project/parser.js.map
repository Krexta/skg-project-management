{"version":3,"sources":["../../../../src/application/scenario/project/parser.ts"],"sourcesContent":["import { BadRequestException } from '@nestjs/common';\nimport { format } from 'date-fns';\n\nimport {\n  Address,\n  IDataUpdateProjectFormatted,\n  Image,\n  Member,\n  Project,\n  ProjectContractStatus,\n  ProjectWorkStatus,\n} from '../../../domain/entity';\nimport {\n  AddressValue,\n  ConstructionType,\n  ContractorId,\n  ContractStatus,\n  ContractType,\n  CreatedUserId,\n  CustomerId,\n  DatetimeValue,\n  ImageId,\n  ImagePath,\n  Material,\n  MemberId,\n  PostalCode,\n  ProjectAddressId,\n  ProjectBindId,\n  ProjectBudget,\n  ProjectContractStatusId,\n  ProjectDescription,\n  ProjectId,\n  ProjectName,\n  ProjectStopFlag,\n  ProjectWorkStatusId,\n  Province,\n  Scale,\n  StatusReason,\n  TotalManWork,\n  WorkStatus,\n  WorkType,\n  YEAR_MONTH_DAY_FORMAT,\n  YearMonthDay,\n} from '../../../domain/value';\nimport { CustomLogger } from '../../../utility';\nimport {\n  ICreateProjectRequest,\n  IProjectResponse,\n  IUpdateProjectRequest,\n} from '../../interface';\n\nexport class ProjectParser {\n  constructor(readonly logger: CustomLogger) {}\n\n  protected returnValueOrUndefined<E, T>(\n    value: E,\n    operation: (value: E) => T,\n  ): T | undefined {\n    return value || value === '' ? operation(value) : undefined;\n  }\n\n  convertToProjectEntity(input: ICreateProjectRequest): Project {\n    try {\n      const now = format(new Date(), YEAR_MONTH_DAY_FORMAT);\n      const projectId = ProjectId.make();\n\n      const projectName = ProjectName.from(input.project_name);\n      const constructionStart = YearMonthDay.from(\n        input.construction_start ?? now,\n      );\n      const constructionStop = YearMonthDay.from(\n        input.construction_stop ?? now,\n      );\n      const budget = ProjectBudget.from(input.budget);\n      const description = ProjectDescription.from(input.description);\n      const customerId = CustomerId.from(input.customer_id);\n      const contractorId = ContractorId.from(input.contractor_id);\n      const scale = Scale.from(input.construction_scale);\n      const totalManWorks = TotalManWork.from(input.total_man_works);\n      const contractType = ContractType.from(input.contract_type);\n      const projectType = WorkType.from(input.project_type);\n      const createdUserId = CreatedUserId.make();\n\n      const member = new Member({\n        projectBindId: ProjectBindId.make(),\n        projectId,\n        projectMemberId: MemberId.from(input.project_member_id),\n      });\n\n      const projectMaterials = input.materials.map((val) => Material.from(val));\n      const projectConstructionTypes = input.construction_types.map((val) =>\n        ConstructionType.from(val),\n      );\n\n      const image = input?.image_url\n        ? new Image({\n            imageId: ImageId.make(),\n            imagePath: ImagePath.from(input.image_url),\n            projectId,\n            createdUserId,\n          })\n        : null;\n\n      const contractStatus = new ProjectContractStatus({\n        projectContractStatusId: ProjectContractStatusId.make(),\n        isProjectStop: ProjectStopFlag.from(false),\n        projectId,\n        statusName: ContractStatus.makeNewStatus(),\n        statusReason: StatusReason.from(ContractStatus.makeNewStatus().value),\n        statusTimestamp: DatetimeValue.current(),\n      });\n\n      const workStatusName = input.project_work_status_name\n        ? WorkStatus.from(input.project_work_status_name)\n        : WorkStatus.makeNotStartedStatus();\n\n      const workStatus = new ProjectWorkStatus({\n        projectWorkStatusId: ProjectWorkStatusId.make(),\n        isProjectStop: ProjectStopFlag.from(false),\n        projectId,\n        statusName: workStatusName,\n        statusReason: StatusReason.from(workStatusName.value),\n        statusTimestamp: DatetimeValue.current(),\n      });\n\n      const address = new Address({\n        projectAddressId: ProjectAddressId.make(),\n        projectId,\n        projectPostalCode: PostalCode.from(input.project_postal_code),\n        projectProvince: Province.from(input.project_province),\n        projectAddress: AddressValue.from(input.project_address),\n      });\n\n      return new Project({\n        projectId,\n        projectName,\n        constructionStart,\n        constructionStop,\n        customerId,\n        contractorId,\n        scale,\n        contractType,\n        projectType,\n        budget,\n        description,\n        totalManWorks,\n        createdUserId,\n        member,\n        image,\n        projectMaterials,\n        projectConstructionTypes,\n        contractStatus,\n        workStatus,\n        address,\n      });\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  formatDataUpdateProject(\n    input: IUpdateProjectRequest,\n  ): IDataUpdateProjectFormatted {\n    const projectType = this.returnValueOrUndefined(\n      input.project_type,\n      WorkType.from,\n    );\n    const projectName = this.returnValueOrUndefined(\n      input.project_name,\n      ProjectName.from,\n    );\n    const constructionStart = this.returnValueOrUndefined(\n      input.construction_start,\n      YearMonthDay.from,\n    );\n    const constructionStop = this.returnValueOrUndefined(\n      input.construction_stop,\n      YearMonthDay.from,\n    );\n    const customerId = this.returnValueOrUndefined(\n      input.customer_id,\n      CustomerId.from,\n    );\n    const contractorId = this.returnValueOrUndefined(\n      input.contractor_id,\n      ContractorId.from,\n    );\n    const scale = this.returnValueOrUndefined(\n      input.construction_scale,\n      Scale.from,\n    );\n    const contractType = this.returnValueOrUndefined(\n      input.contract_type,\n      ContractType.from,\n    );\n    const createdUserId = CreatedUserId.make();\n    const budget = this.returnValueOrUndefined(\n      input.budget,\n      ProjectBudget.from,\n    );\n    const description = this.returnValueOrUndefined(\n      input.description,\n      ProjectDescription.from,\n    );\n    const projectPostalCode = this.returnValueOrUndefined(\n      input.project_postal_code,\n      PostalCode.from,\n    );\n    const projectProvince = this.returnValueOrUndefined(\n      input.project_province,\n      Province.from,\n    );\n    const projectAddress = this.returnValueOrUndefined(\n      input.project_address,\n      AddressValue.from,\n    );\n    const totalManWorks = this.returnValueOrUndefined(\n      input.total_man_works,\n      TotalManWork.from,\n    );\n    const memberId = this.returnValueOrUndefined(\n      input.project_member_id,\n      MemberId.from,\n    );\n    const imagePath = this.returnValueOrUndefined(\n      input?.image_url,\n      ImagePath.from,\n    );\n\n    const workStatusName = this.returnValueOrUndefined(\n      input?.project_work_status_name,\n      WorkStatus.from,\n    );\n\n    const workStatusReason = this.returnValueOrUndefined(\n      input?.project_work_status_reason,\n      StatusReason.from,\n    );\n\n    const contractStatusName = this.returnValueOrUndefined(\n      input?.project_contract_status_name,\n      ContractStatus.from,\n    );\n\n    const contractStatusReason = this.returnValueOrUndefined(\n      input?.project_contract_status_reason,\n      StatusReason.from,\n    );\n\n    const projectMaterials = input.materials?.map((id) => Material.from(id));\n    const projectConstructionTypes = input.construction_types?.map((item) =>\n      ConstructionType.from(item),\n    );\n\n    return {\n      projectType,\n      projectName,\n      constructionStart,\n      constructionStop,\n      customerId,\n      contractorId,\n      scale,\n      contractType,\n      createdUserId,\n      budget,\n      description,\n      projectPostalCode,\n      projectProvince,\n      projectAddress,\n      totalManWorks,\n      memberId,\n      imagePath,\n      projectMaterials,\n      projectConstructionTypes,\n      workStatusName,\n      workStatusReason,\n      contractStatusName,\n      contractStatusReason,\n    };\n  }\n\n  convertToReference(result: Project): IProjectResponse {\n    return {\n      project_id: result.projectId.value,\n      project_name: result.projectName.value,\n      construction_start: result.constructionStart.toDate(),\n      construction_stop: result.constructionStop.toDate(),\n      budget: result.budget.toValue() ?? undefined,\n      description: result.description.value,\n      customer_id: result.customerId.value,\n      contractor_id: result.contractorId.value,\n      construction_scale: result.scale.toValue() ?? undefined,\n      project_type: result.projectType.value,\n      contract_type: result.contractType.value,\n      address: result.address\n        ? {\n            project_address_id: result.address.projectAddressId.value,\n            project_id: result.address.projectId.value,\n            project_postal_code: result.address.projectPostalCode.value,\n            project_province: result.address.projectProvince.value,\n            project_address: result.address.projectAddress.value,\n          }\n        : undefined,\n      total_man_works: result.totalManWorks.toValue() ?? undefined,\n      created_user_id: result.createdUserId.value,\n      project_member: {\n        project_bind_id: result.member.projectBindId.value,\n        project_id: result.member.projectId.value,\n        project_member_id: result.member.projectMemberId.value,\n      },\n      materials: result.projectMaterials.map((material) => material.value),\n      construction_types: result.projectConstructionTypes.map(\n        (type) => type.value,\n      ),\n      image_url: result?.image?.imagePath?.value ?? undefined,\n      contract_status: {\n        project_contract_status_id:\n          result.contractStatus.projectContractStatusId.value,\n        is_project_stop: result.contractStatus.isProjectStop.value,\n        project_id: result.contractStatus.projectId.value,\n        status_name: result.contractStatus.statusName.value,\n        status_reason: result.contractStatus.statusReason.value,\n        status_timestamp: result.contractStatus.statusTimestamp.toString(),\n      },\n      work_status: {\n        project_work_status_id: result.workStatus.projectWorkStatusId.value,\n        is_project_stop: result.workStatus.isProjectStop.value,\n        project_id: result.workStatus.projectId.value,\n        status_name: result.workStatus.statusName.value,\n        status_reason: result.workStatus.statusReason.value,\n        status_timestamp: result.workStatus.statusTimestamp.toString(),\n      },\n    };\n  }\n}\n"],"names":["BadRequestException","format","Address","Image","Member","Project","ProjectContractStatus","ProjectWorkStatus","AddressValue","ConstructionType","ContractorId","ContractStatus","ContractType","CreatedUserId","CustomerId","DatetimeValue","ImageId","ImagePath","Material","MemberId","PostalCode","ProjectAddressId","ProjectBindId","ProjectBudget","ProjectContractStatusId","ProjectDescription","ProjectId","ProjectName","ProjectStopFlag","ProjectWorkStatusId","Province","Scale","StatusReason","TotalManWork","WorkStatus","WorkType","YEAR_MONTH_DAY_FORMAT","YearMonthDay","ProjectParser","returnValueOrUndefined","value","operation","undefined","convertToProjectEntity","input","now","Date","projectId","make","projectName","from","project_name","constructionStart","construction_start","constructionStop","construction_stop","budget","description","customerId","customer_id","contractorId","contractor_id","scale","construction_scale","totalManWorks","total_man_works","contractType","contract_type","projectType","project_type","createdUserId","member","projectBindId","projectMemberId","project_member_id","projectMaterials","materials","map","val","projectConstructionTypes","construction_types","image","image_url","imageId","imagePath","contractStatus","projectContractStatusId","isProjectStop","statusName","makeNewStatus","statusReason","statusTimestamp","current","workStatusName","project_work_status_name","makeNotStartedStatus","workStatus","projectWorkStatusId","address","projectAddressId","projectPostalCode","project_postal_code","projectProvince","project_province","projectAddress","project_address","error","logger","message","formatDataUpdateProject","memberId","workStatusReason","project_work_status_reason","contractStatusName","project_contract_status_name","contractStatusReason","project_contract_status_reason","id","item","convertToReference","result","project_id","toDate","toValue","project_address_id","created_user_id","project_member","project_bind_id","material","type","contract_status","project_contract_status_id","is_project_stop","status_name","status_reason","status_timestamp","toString","work_status","project_work_status_id","constructor"],"mappings":"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"}