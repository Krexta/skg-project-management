{"version":3,"sources":["../../../../src/domain/value/String/PostalCode.spec.ts"],"sourcesContent":["import fc from 'fast-check';\nimport { describe, expect, it } from 'vitest';\n\nimport { PostalCode } from './PostalCode';\n\ndescribe('PostalCode', () => {\n  it('Should return PostalCode when input is valid', () => {\n    fc.assert(\n      fc.property(\n        fc.string({ minLength: 7, maxLength: 7 }).map((name) => name.trim()),\n        (name) => {\n          fc.pre(name.length === 7);\n          const value = PostalCode.from(name);\n          expect(value).toBeInstanceOf(PostalCode);\n          expect(value.value).toEqual(name);\n        },\n      ),\n    );\n  });\n  it('Should throw \"PostalCode must be 7 characters\" name when input too long string', () => {\n    fc.assert(\n      fc.property(\n        fc.string({ minLength: 8 }).map((name) => name.trim()),\n        (name) => {\n          fc.pre(name.length > 8);\n          expect(() => {\n            PostalCode.from(name);\n          }).toThrow(/PostalCode must be 7 characters/);\n        },\n      ),\n    );\n  });\n  it('Should throw \"PostalCode must not be empty\" when input empty string', () => {\n    fc.assert(\n      fc.property(fc.constantFrom('', ' ', 'ã€€'), (name) => {\n        expect(() => {\n          PostalCode.from(name);\n        }).toThrow(/PostalCode must not be empty/);\n      }),\n    );\n  });\n});\n"],"names":["fc","describe","expect","it","PostalCode","assert","property","string","minLength","maxLength","map","name","trim","pre","length","value","from","toBeInstanceOf","toEqual","toThrow","constantFrom"],"mappings":"AAAA,OAAOA,QAAQ,aAAa;AAC5B,SAASC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,QAAQ,SAAS;AAE9C,SAASC,UAAU,QAAQ,kBAAe;AAE1CH,SAAS,cAAc;IACrBE,GAAG,gDAAgD;QACjDH,GAAGK,MAAM,CACPL,GAAGM,QAAQ,CACTN,GAAGO,MAAM,CAAC;YAAEC,WAAW;YAAGC,WAAW;QAAE,GAAGC,GAAG,CAAC,CAACC,OAASA,KAAKC,IAAI,KACjE,CAACD;YACCX,GAAGa,GAAG,CAACF,KAAKG,MAAM,KAAK;YACvB,MAAMC,QAAQX,WAAWY,IAAI,CAACL;YAC9BT,OAAOa,OAAOE,cAAc,CAACb;YAC7BF,OAAOa,MAAMA,KAAK,EAAEG,OAAO,CAACP;QAC9B;IAGN;IACAR,GAAG,kFAAkF;QACnFH,GAAGK,MAAM,CACPL,GAAGM,QAAQ,CACTN,GAAGO,MAAM,CAAC;YAAEC,WAAW;QAAE,GAAGE,GAAG,CAAC,CAACC,OAASA,KAAKC,IAAI,KACnD,CAACD;YACCX,GAAGa,GAAG,CAACF,KAAKG,MAAM,GAAG;YACrBZ,OAAO;gBACLE,WAAWY,IAAI,CAACL;YAClB,GAAGQ,OAAO,CAAC;QACb;IAGN;IACAhB,GAAG,uEAAuE;QACxEH,GAAGK,MAAM,CACPL,GAAGM,QAAQ,CAACN,GAAGoB,YAAY,CAAC,IAAI,KAAK,MAAM,CAACT;YAC1CT,OAAO;gBACLE,WAAWY,IAAI,CAACL;YAClB,GAAGQ,OAAO,CAAC;QACb;IAEJ;AACF"}