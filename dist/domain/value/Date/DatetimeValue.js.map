{"version":3,"sources":["../../../../src/domain/value/Date/DatetimeValue.ts"],"sourcesContent":["import { format, toDate } from 'date-fns';\n\nimport { BaseValueObject } from '../base';\n\nimport { YearMonthDay } from './YearMonthDay';\n\nexport const DATETIME_VALUE_FORMAT: string = 'yyyy-MM-dd kk:mm:ss';\n\nexport class DatetimeValue extends BaseValueObject<\n  'DatetimeValue',\n  [YearMonthDay, string, string, string]\n> {\n  static from(date: string): DatetimeValue {\n    if (!/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/.test(date)) {\n      throw new Error(`Invalid YearMonthDay: ${date}`);\n    }\n\n    const [left, right] = date.split(' ', 2);\n    const [hour, minute, second] = right.split(':', 3);\n\n    return new DatetimeValue([YearMonthDay.from(left), hour, minute, second]);\n  }\n  protected validate(\n    value: [YearMonthDay, string, string, string],\n  ): [YearMonthDay, string, string, string] {\n    if (!/^([01]?[0-9]|2[0-4])$/.test(value[1])) {\n      throw new Error(`Invalid Hour: ${value[1]}`);\n    }\n    if (!/^([0-5]?[0-9])$/.test(value[2])) {\n      throw new Error(`Invalid Minute: ${value[2]}`);\n    }\n    if (!/^([0-5]?[0-9])$/.test(value[3])) {\n      throw new Error(`Invalid Second: ${value[3]}`);\n    }\n    return value;\n  }\n\n  equals(other: DatetimeValue): boolean {\n    const [yearMonthDay, ...remain] = other.value;\n    const [currentYMD, ...currentRemain] = this._value;\n    return (\n      yearMonthDay.equals(currentYMD) &&\n      remain.toString() === currentRemain.toString()\n    );\n  }\n\n  static current(): DatetimeValue {\n    return DatetimeValue.from(format(new Date(), DATETIME_VALUE_FORMAT));\n  }\n\n  get hour(): number {\n    return Number(this.value[1]);\n  }\n  get minute(): number {\n    return Number(this.value[2]);\n  }\n  get second(): number {\n    return Number(this.value[3]);\n  }\n\n  get hourString(): string {\n    return this.value[1];\n  }\n  get minuteString(): string {\n    return this.value[2];\n  }\n  get secondString(): string {\n    return this.value[3];\n  }\n\n  toDate(): Date {\n    return toDate(this.toString());\n  }\n\n  toString(): string {\n    return `${this._value[0].toString()} ${this.hourString}:${this.minuteString}:${this.secondString}`;\n  }\n}\n"],"names":["format","toDate","BaseValueObject","YearMonthDay","DATETIME_VALUE_FORMAT","DatetimeValue","from","date","test","Error","left","right","split","hour","minute","second","validate","value","equals","other","yearMonthDay","remain","currentYMD","currentRemain","_value","toString","current","Date","Number","hourString","minuteString","secondString"],"mappings":"AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,WAAW;AAE1C,SAASC,eAAe,QAAQ,aAAU;AAE1C,SAASC,YAAY,QAAQ,oBAAiB;AAE9C,OAAO,MAAMC,wBAAgC,sBAAsB;AAEnE,OAAO,MAAMC,sBAAsBH;IAIjC,OAAOI,KAAKC,IAAY,EAAiB;QACvC,IAAI,CAAC,wCAAwCC,IAAI,CAACD,OAAO;YACvD,MAAM,IAAIE,MAAM,CAAC,sBAAsB,EAAEF,MAAM;QACjD;QAEA,MAAM,CAACG,MAAMC,MAAM,GAAGJ,KAAKK,KAAK,CAAC,KAAK;QACtC,MAAM,CAACC,MAAMC,QAAQC,OAAO,GAAGJ,MAAMC,KAAK,CAAC,KAAK;QAEhD,OAAO,IAAIP,cAAc;YAACF,aAAaG,IAAI,CAACI;YAAOG;YAAMC;YAAQC;SAAO;IAC1E;IACUC,SACRC,KAA6C,EACL;QACxC,IAAI,CAAC,wBAAwBT,IAAI,CAACS,KAAK,CAAC,EAAE,GAAG;YAC3C,MAAM,IAAIR,MAAM,CAAC,cAAc,EAAEQ,KAAK,CAAC,EAAE,EAAE;QAC7C;QACA,IAAI,CAAC,kBAAkBT,IAAI,CAACS,KAAK,CAAC,EAAE,GAAG;YACrC,MAAM,IAAIR,MAAM,CAAC,gBAAgB,EAAEQ,KAAK,CAAC,EAAE,EAAE;QAC/C;QACA,IAAI,CAAC,kBAAkBT,IAAI,CAACS,KAAK,CAAC,EAAE,GAAG;YACrC,MAAM,IAAIR,MAAM,CAAC,gBAAgB,EAAEQ,KAAK,CAAC,EAAE,EAAE;QAC/C;QACA,OAAOA;IACT;IAEAC,OAAOC,KAAoB,EAAW;QACpC,MAAM,CAACC,cAAc,GAAGC,OAAO,GAAGF,MAAMF,KAAK;QAC7C,MAAM,CAACK,YAAY,GAAGC,cAAc,GAAG,IAAI,CAACC,MAAM;QAClD,OACEJ,aAAaF,MAAM,CAACI,eACpBD,OAAOI,QAAQ,OAAOF,cAAcE,QAAQ;IAEhD;IAEA,OAAOC,UAAyB;QAC9B,OAAOrB,cAAcC,IAAI,CAACN,OAAO,IAAI2B,QAAQvB;IAC/C;IAEA,IAAIS,OAAe;QACjB,OAAOe,OAAO,IAAI,CAACX,KAAK,CAAC,EAAE;IAC7B;IACA,IAAIH,SAAiB;QACnB,OAAOc,OAAO,IAAI,CAACX,KAAK,CAAC,EAAE;IAC7B;IACA,IAAIF,SAAiB;QACnB,OAAOa,OAAO,IAAI,CAACX,KAAK,CAAC,EAAE;IAC7B;IAEA,IAAIY,aAAqB;QACvB,OAAO,IAAI,CAACZ,KAAK,CAAC,EAAE;IACtB;IACA,IAAIa,eAAuB;QACzB,OAAO,IAAI,CAACb,KAAK,CAAC,EAAE;IACtB;IACA,IAAIc,eAAuB;QACzB,OAAO,IAAI,CAACd,KAAK,CAAC,EAAE;IACtB;IAEAhB,SAAe;QACb,OAAOA,OAAO,IAAI,CAACwB,QAAQ;IAC7B;IAEAA,WAAmB;QACjB,OAAO,GAAG,IAAI,CAACD,MAAM,CAAC,EAAE,CAACC,QAAQ,GAAG,CAAC,EAAE,IAAI,CAACI,UAAU,CAAC,CAAC,EAAE,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE,IAAI,CAACC,YAAY,EAAE;IACpG;AACF"}