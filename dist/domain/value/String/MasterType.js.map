{"version":3,"sources":["../../../../src/domain/value/String/MasterType.ts"],"sourcesContent":["import { BaseValueObject } from '../base';\n\nexport const WORK_TYPE_LIST = [\n  'zaikou', //材工：\n  'han_zaikou', //半材工：\n  'jouyou', //常用：\n  'tema_uke', //手間受け：\n  'kouji_uke', //工事受け：\n  'isshiki', //一式：\n] as const;\nexport type WORK_TYPE_TYPE = (typeof WORK_TYPE_LIST)[number];\n\nexport const CONTRACT_TYPE_LIST = [\n  'first_tier', //一次：\n  'second_tier', //二次：\n  'third_tier_and_below', //三次以下：\n] as const;\nexport type CONTRACT_TYPE_TYPE = (typeof CONTRACT_TYPE_LIST)[number];\n\nexport const MATERIAL_LIST = [\n  'ALC', //ALC\n  'ECP', //ECP\n] as const;\nexport type MATERIAL_TYPE = (typeof MATERIAL_LIST)[number];\n\nexport const CONSTRUCTION_TYPE_LIST = [\n  'general_civil_engineering_work', //土木一式工事：\n  'general_building_work', //建築一式工事：\n  'carpentry_work', //大工工事：\n  'plastering_work', //左官工事：\n  'scaffolding_work_earth_work_and_concret_work', //とび・土工・コンクリート工事：\n  'masonry_work', //石工事：\n] as const;\nexport type CONSTRUCTION_TYPE_TYPE = (typeof CONSTRUCTION_TYPE_LIST)[number];\n\nexport class WorkType extends BaseValueObject<'WorkType', string> {\n  static from(value: string): WorkType {\n    return new WorkType(value);\n  }\n\n  protected validate(value: string): string {\n    if (!WORK_TYPE_LIST.includes(value as WORK_TYPE_TYPE)) {\n      throw new Error('Invalid work type');\n    }\n\n    return value;\n  }\n}\nexport class ContractType extends BaseValueObject<'ContractType', string> {\n  static from(value: string): ContractType {\n    return new ContractType(value);\n  }\n\n  protected validate(value: string): string {\n    if (!CONTRACT_TYPE_LIST.includes(value as CONTRACT_TYPE_TYPE)) {\n      throw new Error('Invalid contract type');\n    }\n\n    return value;\n  }\n}\n\nexport class Material extends BaseValueObject<'Material', string> {\n  static from(value: string): Material {\n    return new Material(value);\n  }\n\n  protected validate(value: string): string {\n    if (!MATERIAL_LIST.includes(value as MATERIAL_TYPE)) {\n      throw new Error('Invalid material');\n    }\n\n    return value;\n  }\n}\n\nexport class ConstructionType extends BaseValueObject<\n  'ConstructionType',\n  string\n> {\n  static from(value: string): ConstructionType {\n    return new ConstructionType(value);\n  }\n\n  protected validate(value: string): string {\n    if (!CONSTRUCTION_TYPE_LIST.includes(value as CONSTRUCTION_TYPE_TYPE)) {\n      throw new Error('Invalid construction type');\n    }\n\n    return value;\n  }\n}\n"],"names":["BaseValueObject","WORK_TYPE_LIST","CONTRACT_TYPE_LIST","MATERIAL_LIST","CONSTRUCTION_TYPE_LIST","WorkType","from","value","validate","includes","Error","ContractType","Material","ConstructionType"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAU;AAE1C,OAAO,MAAMC,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;CACD,CAAU;AAGX,OAAO,MAAMC,qBAAqB;IAChC;IACA;IACA;CACD,CAAU;AAGX,OAAO,MAAMC,gBAAgB;IAC3B;IACA;CACD,CAAU;AAGX,OAAO,MAAMC,yBAAyB;IACpC;IACA;IACA;IACA;IACA;IACA;CACD,CAAU;AAGX,OAAO,MAAMC,iBAAiBL;IAC5B,OAAOM,KAAKC,KAAa,EAAY;QACnC,OAAO,IAAIF,SAASE;IACtB;IAEUC,SAASD,KAAa,EAAU;QACxC,IAAI,CAACN,eAAeQ,QAAQ,CAACF,QAA0B;YACrD,MAAM,IAAIG,MAAM;QAClB;QAEA,OAAOH;IACT;AACF;AACA,OAAO,MAAMI,qBAAqBX;IAChC,OAAOM,KAAKC,KAAa,EAAgB;QACvC,OAAO,IAAII,aAAaJ;IAC1B;IAEUC,SAASD,KAAa,EAAU;QACxC,IAAI,CAACL,mBAAmBO,QAAQ,CAACF,QAA8B;YAC7D,MAAM,IAAIG,MAAM;QAClB;QAEA,OAAOH;IACT;AACF;AAEA,OAAO,MAAMK,iBAAiBZ;IAC5B,OAAOM,KAAKC,KAAa,EAAY;QACnC,OAAO,IAAIK,SAASL;IACtB;IAEUC,SAASD,KAAa,EAAU;QACxC,IAAI,CAACJ,cAAcM,QAAQ,CAACF,QAAyB;YACnD,MAAM,IAAIG,MAAM;QAClB;QAEA,OAAOH;IACT;AACF;AAEA,OAAO,MAAMM,yBAAyBb;IAIpC,OAAOM,KAAKC,KAAa,EAAoB;QAC3C,OAAO,IAAIM,iBAAiBN;IAC9B;IAEUC,SAASD,KAAa,EAAU;QACxC,IAAI,CAACH,uBAAuBK,QAAQ,CAACF,QAAkC;YACrE,MAAM,IAAIG,MAAM;QAClB;QAEA,OAAOH;IACT;AACF"}