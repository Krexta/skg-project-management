{"version":3,"sources":["../../../src/domain/entity/Project.ts"],"sourcesContent":["import {\n  AddressValue,\n  ConstructionType,\n  ContractorId,\n  ContractStatus,\n  ContractType,\n  CreatedUserId,\n  CustomerId,\n  DatetimeValue,\n  ImageId,\n  ImagePath,\n  Material,\n  MemberId,\n  PostalCode,\n  ProjectBindId,\n  ProjectBudget,\n  ProjectContractStatusId,\n  ProjectDescription,\n  ProjectId,\n  ProjectName,\n  ProjectStopFlag,\n  ProjectWorkStatusId,\n  Province,\n  Scale,\n  StatusReason,\n  TotalManWork,\n  WorkStatus,\n  WorkType,\n  YearMonthDay,\n} from '../value';\n\nimport {\n  Address,\n  Image,\n  Member,\n  ProjectContractStatus,\n  ProjectWorkStatus,\n  UpdateAddress,\n} from '.';\n\nexport interface IDataUpdateProjectFormatted {\n  projectType?: WorkType;\n  projectName?: ProjectName;\n  constructionStart?: YearMonthDay;\n  constructionStop?: YearMonthDay;\n  customerId?: CustomerId;\n  contractorId?: ContractorId;\n  scale?: Scale;\n  contractType?: ContractType;\n  createdUserId?: CreatedUserId;\n  budget?: ProjectBudget;\n  description?: ProjectDescription;\n  projectPostalCode?: PostalCode;\n  projectProvince?: Province;\n  projectAddress?: AddressValue;\n  totalManWorks?: TotalManWork;\n  memberId?: MemberId;\n  imagePath?: ImagePath;\n  projectMaterials?: Material[];\n  projectConstructionTypes?: ConstructionType[];\n  workStatusName?: WorkStatus;\n  workStatusReason?: StatusReason;\n  contractStatusName?: ContractStatus;\n  contractStatusReason?: StatusReason;\n}\n\nexport interface IProjectArgs {\n  projectId: ProjectId;\n  projectType: WorkType;\n  projectName: ProjectName;\n  constructionStart: YearMonthDay;\n  constructionStop: YearMonthDay;\n  customerId: CustomerId;\n  contractorId: ContractorId;\n  scale: Scale;\n  contractType: ContractType;\n  createdUserId: CreatedUserId;\n  budget: ProjectBudget;\n  description: ProjectDescription;\n  address: Address | null;\n  totalManWorks: TotalManWork;\n  member: Member;\n  image: Image | null;\n  projectMaterials: Material[];\n  projectConstructionTypes: ConstructionType[];\n  workStatus: ProjectWorkStatus;\n  contractStatus: ProjectContractStatus;\n}\n\nexport class UpdatedProject {\n  readonly projectId: ProjectId;\n  readonly projectType?: WorkType;\n  readonly projectName?: ProjectName;\n  readonly constructionStart?: YearMonthDay;\n  readonly constructionStop?: YearMonthDay;\n  readonly customerId?: CustomerId;\n  readonly contractorId?: ContractorId;\n  readonly scale?: Scale;\n  readonly contractType?: ContractType;\n  readonly createdUserId?: CreatedUserId;\n  readonly budget?: ProjectBudget;\n  readonly description?: ProjectDescription;\n  readonly address?: UpdateAddress;\n  readonly totalManWorks?: TotalManWork;\n  readonly member?: Member;\n  readonly image?: Image;\n  readonly projectMaterials?: Material[];\n  readonly projectConstructionTypes?: ConstructionType[];\n  readonly workStatus?: ProjectWorkStatus;\n  readonly contractStatus?: ProjectContractStatus;\n\n  constructor(args: UpdatedProject) {\n    this.projectId = args.projectId;\n    this.projectType = args.projectType;\n    this.projectName = args.projectName;\n    this.constructionStart = args.constructionStart;\n    this.constructionStop = args.constructionStop;\n    this.customerId = args.customerId;\n    this.contractorId = args.contractorId;\n    this.scale = args.scale;\n    this.contractType = args.contractType;\n    this.createdUserId = args.createdUserId;\n    this.budget = args.budget;\n    this.description = args.description;\n    this.address = args.address;\n    this.totalManWorks = args.totalManWorks;\n    this.member = args.member;\n    this.projectMaterials = args.projectMaterials;\n    this.projectConstructionTypes = args.projectConstructionTypes;\n    this.image = args.image;\n    this.contractStatus = args.contractStatus;\n    this.workStatus = args.workStatus;\n  }\n}\n\nexport class Project {\n  private _projectId: ProjectId;\n  private _projectType: WorkType;\n  private _projectName: ProjectName;\n  private _constructionStart: YearMonthDay;\n  private _constructionStop: YearMonthDay;\n  private _customerId: CustomerId;\n  private _contractorId: ContractorId;\n  private _scale: Scale;\n  private _contractType: ContractType;\n  private _createdUserId: CreatedUserId;\n  private _budget: ProjectBudget;\n  private _description: ProjectDescription;\n  private _address: Address | null;\n  private _totalManWorks: TotalManWork;\n  private _member: Member;\n  private _image: Image | null;\n  private _projectMaterials: Material[];\n  private _projectConstructionTypes: ConstructionType[];\n  private _workStatus: ProjectWorkStatus;\n  private _contractStatus: ProjectContractStatus;\n\n  constructor(args: IProjectArgs) {\n    this._projectId = args.projectId;\n    this._projectType = args.projectType;\n    this._projectName = args.projectName;\n    this._constructionStart = args.constructionStart;\n    this._constructionStop = args.constructionStop;\n    this._customerId = args.customerId;\n    this._contractorId = args.contractorId;\n    this._scale = args.scale;\n    this._contractType = args.contractType;\n    this._createdUserId = args.createdUserId;\n    this._budget = args.budget;\n    this._description = args.description;\n    this._address = args.address;\n    this._totalManWorks = args.totalManWorks;\n    this._member = args.member;\n    this._projectMaterials = args.projectMaterials;\n    this._projectConstructionTypes = args.projectConstructionTypes;\n    this._image = args.image;\n    this._contractStatus = args.contractStatus;\n    this._workStatus = args.workStatus;\n  }\n\n  public get projectId() {\n    return this._projectId;\n  }\n  public get projectType() {\n    return this._projectType;\n  }\n  public get projectName() {\n    return this._projectName;\n  }\n  public get constructionStart() {\n    return this._constructionStart;\n  }\n  public get constructionStop() {\n    return this._constructionStop;\n  }\n  public get customerId() {\n    return this._customerId;\n  }\n  public get contractorId() {\n    return this._contractorId;\n  }\n  public get scale() {\n    return this._scale;\n  }\n  public get contractType() {\n    return this._contractType;\n  }\n  public get createdUserId() {\n    return this._createdUserId;\n  }\n  public get budget() {\n    return this._budget;\n  }\n  public get description() {\n    return this._description;\n  }\n  public get address() {\n    return this._address;\n  }\n  public get totalManWorks() {\n    return this._totalManWorks;\n  }\n  public get member() {\n    return this._member;\n  }\n  public get projectMaterials() {\n    return this._projectMaterials;\n  }\n  public get projectConstructionTypes() {\n    return this._projectConstructionTypes;\n  }\n  public get image() {\n    return this._image;\n  }\n  public get contractStatus() {\n    return this._contractStatus;\n  }\n  public get workStatus() {\n    return this._workStatus;\n  }\n  update(input: IDataUpdateProjectFormatted): UpdatedProject {\n    const image = input.imagePath\n      ? new Image({\n          imageId: ImageId.make(),\n          imagePath: input?.imagePath,\n          projectId: this._projectId,\n          createdUserId: this.createdUserId,\n        })\n      : undefined;\n    // Address\n    const address = this.address?.update({\n      projectPostalCode: input.projectPostalCode,\n      projectProvince: input.projectProvince,\n      projectAddress: input.projectAddress,\n    });\n\n    // projectMember\n    const member = input.memberId\n      ? new Member({\n          projectBindId: ProjectBindId.make(),\n          projectId: this._projectId,\n          projectMemberId: input.memberId,\n        })\n      : undefined;\n\n    // WorkStatus\n    const workStatus =\n      input.workStatusName && input.workStatusReason\n        ? new ProjectWorkStatus({\n            projectWorkStatusId: ProjectWorkStatusId.make(),\n            isProjectStop: ProjectStopFlag.from(\n              input.workStatusName.value ===\n                WorkStatus.makeDeletedStatus().value,\n            ),\n            projectId: this._projectId,\n            statusName: input.workStatusName,\n            statusReason: input.workStatusReason,\n            statusTimestamp: DatetimeValue.current(),\n          })\n        : undefined;\n\n    // ContractStatus\n    const contractStatus =\n      input.contractStatusName && input.contractStatusReason\n        ? new ProjectContractStatus({\n            projectContractStatusId: ProjectContractStatusId.make(),\n            isProjectStop: ProjectStopFlag.from(false),\n            projectId: this._projectId,\n            statusName: input.contractStatusName,\n            statusReason: input.contractStatusReason,\n            statusTimestamp: DatetimeValue.current(),\n          })\n        : undefined;\n\n    return new UpdatedProject({\n      projectId: this.projectId,\n      projectName: input.projectName,\n      constructionStart: input.constructionStart,\n      constructionStop: input.constructionStop,\n      budget: input.budget,\n      description: input.description,\n      customerId: input.customerId,\n      contractorId: input.contractorId,\n      scale: input.scale,\n      totalManWorks: input.totalManWorks,\n      projectType: input.projectType,\n      contractType: input.contractType,\n      projectConstructionTypes: input.projectConstructionTypes,\n      projectMaterials: input.projectMaterials,\n      image,\n      address,\n      member,\n      workStatus,\n      contractStatus,\n    });\n  }\n}\n"],"names":["DatetimeValue","ImageId","ProjectBindId","ProjectContractStatusId","ProjectStopFlag","ProjectWorkStatusId","WorkStatus","Image","Member","ProjectContractStatus","ProjectWorkStatus","UpdatedProject","constructor","args","projectId","projectType","projectName","constructionStart","constructionStop","customerId","contractorId","scale","contractType","createdUserId","budget","description","address","totalManWorks","member","projectMaterials","projectConstructionTypes","image","contractStatus","workStatus","Project","_projectId","_projectType","_projectName","_constructionStart","_constructionStop","_customerId","_contractorId","_scale","_contractType","_createdUserId","_budget","_description","_address","_totalManWorks","_member","_projectMaterials","_projectConstructionTypes","_image","_contractStatus","_workStatus","update","input","imagePath","imageId","make","undefined","projectPostalCode","projectProvince","projectAddress","memberId","projectBindId","projectMemberId","workStatusName","workStatusReason","projectWorkStatusId","isProjectStop","from","value","makeDeletedStatus","statusName","statusReason","statusTimestamp","current","contractStatusName","contractStatusReason","projectContractStatusId"],"mappings":"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"}